subair Expressions(2**23);

namespace Expressions:: {

    constant N_MAX = 32;
    constant PSIX[6] = [2, 3, 5, 7, 11, 13];
    constant MATRIX[2][8] = [[10,11,12,13,14,15,16,17], [20,21,22,23,24,25,26,27]];

    col witness x1[N_MAX];

    int bc = 4;
    col tmp = 0;

    col tmp2 = bc * x1[0];

    expr myfirstexpr = bc * x1[0]'2;

    x1[0] === 4;

    for (int index = 0; index < 5; ++index) {
        x1[index + 1] === myfirstexpr'(index) + bc + PSIX[index % 2];
        x1[index + 1] === tmp2 + 1;
        if (index > 2) {
            x1[index - 2] === tmp2 + 1;
        }
        bc = bc * 3;
    }
    for (int index in [3,5,7,11,13,17]) {
       x1[index] === 0;

    }
    for (int index in PSIX) {
       x1[10+index] === 0;
    }
    for (int i = 0; i < 2; ++i) {
        for (int j = 0; j < 6; ++j) {
           x1[0] === MATRIX[i][j];
        }
    }
    for (int i = 0; i < 2; ++i) {
        for (int value in MATRIX[i]) x1[0] === value;
    }
}