function func_with_once (col witness p1) {
    once subproof p1 === 314;
}

function func_with_once2 (int i) : int {
    println(i);
    once subproof int j = 13;
    return i * j;
}

subproof Functions(2**23) {

    col witness c1,c2;

    func_with_once(c1);
    func_with_once(c2);

    for (int i = 1; i < 5; ++i) {
        for (int j = i + 1; j < 5; ++j) {
            once subproof c2 + c1 === i * j * 7;
        }
    }

    for (int i = 2; i < 5; ++i) {
        once subproof {
            for (int j = i + 1; j < 5; ++j) {
                c2 + c1 === i * j * 11;
            }
        }
    }

    once subproof {
        for (int i = 3; i < 5; ++i) {
            for (int j = i + 1; j < 7; ++j) {
                c2 + c1 === i * j;
            }
        }
    }

    c2 === func_with_once2(10);
    // func_with_once2(20); // generate an expected error
}